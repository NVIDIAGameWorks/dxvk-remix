/*
* Copyright (c) 2025, NVIDIA CORPORATION. All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a
* copy of this software and associated documentation files (the "Software"),
* to deal in the Software without restriction, including without limitation
* the rights to use, copy, modify, merge, publish, distribute, sublicense,
* and/or sell copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
* THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
* DEALINGS IN THE SOFTWARE.
*/
#pragma once

#include "rtx/pass/particles/dust_particles_binding_indices.h"
#include "rtx/pass/common_bindings.slangh"

// Inputs

layout(push_constant)
ConstantBuffer<ParticleSystemConstants> particleCb;

layout(binding = DUST_PARTICLES_BINDING_FILTERED_RADIANCE_Y_INPUT)
Sampler3D<float4> FilteredAccumulatedRadianceY;

layout(binding = DUST_PARTICLES_BINDING_FILTERED_RADIANCE_CO_CG_INPUT)
Sampler3D<float2> FilteredAccumulatedRadianceCoCg;

layout(binding = DUST_PARTICLES_BINDING_DEPTH_INPUT)
Sampler2D<float> PrimaryDepth;

// Outputs

layout(binding = DUST_PARTICLES_BINDING_PARTICLES_BUFFER_INOUT)
RWStructuredBuffer<GpuParticle> Particles;

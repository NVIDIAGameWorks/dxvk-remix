name: Build

on:
  push:
    branches: [ main, automatic-releases ]
  pull_request:
    branches: [ main ]

jobs:
  build-windows:
    runs-on: windows-2022
    permissions: write-all
    strategy:
      matrix:
        include:
          - build-flavour: debug
            output-subdir: _Comp64Debug
          - build-flavour: debugoptimized
            output-subdir: _Comp64DebugOptimized
          - build-flavour: release
            output-subdir: _Comp64Release

    steps:
    - name: Setup variables
      uses: actions/github-script@v6
      with:
        script: core.exportVariable('GITHUB_SHA_SHORT', context.sha.substring(0, 7))

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Setup Meson
      run: pip install meson==0.62.1
    
    - name: Build
      shell: pwsh
      run: |
        Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope Process
        . .\build_common.ps1
        PerformBuild -BuildFlavour ${{matrix.build-flavour}} -BuildSubDir ${{matrix.output-subdir}} -Backend ninja -EnableTracy false copy_output
    
    - name: Copy readme
      run: copy artifacts_readme.txt _output
    
    - name: Upload binaries
      uses: actions/upload-artifact@v3
      with:
        name: dxvk-remix-${{env.GITHUB_SHA_SHORT}}-${{github.run_number}}-${{matrix.build-flavour}}
        path: |
          _output\*.dll
          _output\*.pdb
          _output\*.txt

    - name: Create clean directory for CI/CD release 
      shell: pwsh
      run: |
        New-Item ".\_release" -Type Directory
        cd ".\_release"
        Get-ChildItem -Path "..\_output" -Recurse -Filter *.pdb | Copy-Item
        Get-ChildItem -Path "..\_output" -Recurse -Filter *.dll | Copy-Item
        Get-ChildItem -Path "..\_output" -Recurse -Filter *.txt | Copy-Item
        cd ".."
        Compress-Archive -Path ".\_release\*" -DestinationPath "dxvk-remix-${{env.GITHUB_SHA_SHORT}}-${{github.run_number}}-${{matrix.build-flavour}}.zip"

    - name: "Prune automatic CI/CD releases to latest"
      uses: dev-drprasad/delete-older-releases@v0.2.1
      with:
        keep_latest: 2
        delete_tag_pattern: automatic # defaults to ""
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: "Create new CI/CD release"
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "automatic-${{matrix.build-flavour}}"
        prerelease: true
        title: "dxvk-remix-${{env.GITHUB_SHA_SHORT}}-${{github.run_number}}-${{matrix.build-flavour}}"
        files: | 
          *.zip
          _release/*.txt